resources:
- repo: self

variables:
  ArtifactsDirectoryName: 'artifacts'
  BuildConfiguration: 'Release'
  BuildPlatform: 'Any CPU'
  DotNetVersion: '6.x'
  MSBuildArgs: '"/p:Platform=$(BuildPlatform)" "/p:Configuration=$(BuildConfiguration)" "/BinaryLogger:$(Build.SourcesDirectory)\$(ArtifactsDirectoryName)\msbuild.binlog"'
  SignType: 'Test'

trigger:
  batch: 'true'
  branches:
    include:
    - 'main'
    - 'rel/*'
    - 'refs/tags/*'
  paths:
    exclude:
    - '*.md'

pr:
  branches:
    include:
    - 'main'
    - 'rel/*'
  paths:
    exclude:
    - '*.md'

stages:
- stage:
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      name: 'VSEngSS-MicroBuild2022-1ES'
    steps:
    - task: PowerShell@2
      displayName: 'Update SignType, Build Number, and Add Build Tag for tagged commits'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/Microsoft.Build'))
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Updating SignType to 'Real'"
          Write-Host "##vso[task.setvariable variable=SignType;]Real"
          Write-Host ""
          $buildTag = [System.Text.RegularExpressions.Regex]::Match("$(Build.SourceBranchName)", "Microsoft\.Build\.[\w\.]+.*")
          if($buildTag.Success -eq $true)
          {
              Write-Host "Updating VSTS build number to ""$buildTag"""
              Write-Host "##vso[build.updatebuildnumber]$buildTag"
              Write-Host ""
              Write-Host "Adding build tag ""$buildTag"""
              Write-Host "##vso[build.addbuildtag]$buildTag"
          }

    - task: UseDotNet@2
      displayName: 'Install .NET $(DotNetVersion)'
      inputs:
        version: '$(DotNetVersion)'

    - task: MicroBuildSigningPlugin@1
      displayName: 'Install MicroBuild Signing Plugin'
      inputs:
        signType: '$(SignType)'
        zipSources: false

    - task: DotNetCoreCLI@2
      displayName: 'Build Solution'
      inputs:
        command: 'build'
        projects: 'MSBuildSdks.sln'
        arguments: '$(MSBuildArgs)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: '$(ArtifactsDirectoryName)'
        ArtifactName: $(ArtifactsDirectoryName)
      condition: always()