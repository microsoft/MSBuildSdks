resources:
- repo: self

variables:
  ArtifactsDirectoryName: 'artifacts'
  BuildConfiguration: 'Debug'
  BuildPlatform: 'Any CPU'
  DotNet6Version: '6.x'
  DotNet7Version: '7.x'
  DotNet8Version: '8.x'
  MSBuildArgs: '"/p:Platform=$(BuildPlatform)" "/p:Configuration=$(BuildConfiguration)" "/BinaryLogger:$(Build.SourcesDirectory)\$(ArtifactsDirectoryName)\msbuild.binlog"'
  SignType: 'Test'

trigger:
  batch: 'true'
  branches:
    include:
    - 'main'
    - 'rel/*'
  paths:
    exclude:
    - '*.md'
pr:
  branches:
    include:
    - 'main'
    - 'rel/*'
  paths:
    exclude:
    - '*.md'

jobs:
- job: WindowsBuild
  displayName: 'Build and Test (Windows)'
  pool:
    vmImage: windows-latest
  steps:

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet6Version)'
    inputs:
      version: '$(DotNet6Version)'

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet7Version)'
    inputs:
      version: '$(DotNet7Version)'

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet8Version)'
    inputs:
      version: '$(DotNet8Version)'

  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: 'build'
      arguments: '$(MSBuildArgs)'

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET Framework)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net472 /noautorsp'
      testRunTitle: 'Windows .NET Framework'
    condition: succeededOrFailed()

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 6.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net6.0 /noautorsp'
      testRunTitle: 'Windows .NET 6.0'
    condition: succeededOrFailed()

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 7.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net7.0 /noautorsp'
      testRunTitle: 'Windows .NET 7.0'
    condition: succeededOrFailed()

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 8.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net8.0 /noautorsp'
      testRunTitle: 'Windows .NET 8.0'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(ArtifactsDirectoryName)'
      ArtifactName: '$(ArtifactsDirectoryName)-win'
    condition: always()

- job: LinuxBuild
  displayName: 'Build and Test (Linux)'
  pool:
    vmImage: ubuntu-latest
  steps:

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet6Version)'
    inputs:
      version: '$(DotNet6Version)'

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet7Version)'
    inputs:
      version: '$(DotNet7Version)'

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet8Version)'
    inputs:
      version: '$(DotNet8Version)'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      arguments: '$(MSBuildArgs)'

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 6.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net6.0 /noautorsp'
      testRunTitle: 'Linux .NET 6.0'
    condition: succeededOrFailed()

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 7.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net7.0 /noautorsp'
      testRunTitle: 'Linux .NET 7.0'
    condition: succeededOrFailed()

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 8.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net8.0 /noautorsp'
      testRunTitle: 'Linux .NET 8.0'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(ArtifactsDirectoryName)'
      ArtifactName: '$(ArtifactsDirectoryName)-linux'
    condition: always()

- job: MacOSBuild
  displayName: 'Build and Test (Mac)'
  pool:
    vmImage: macOS-latest
  steps:

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet6Version)'
    inputs:
      version: '$(DotNet6Version)'

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet7Version)'
    inputs:
      version: '$(DotNet7Version)'

  - task: UseDotNet@2
    displayName: 'Install .NET $(DotNet8Version)'
    inputs:
      version: '$(DotNet8Version)'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      arguments: '$(MSBuildArgs)'

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 6.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net6.0 /noautorsp'
      testRunTitle: 'MacOS .NET 6.0'
    condition: succeededOrFailed()

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 7.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net7.0 /noautorsp'
      testRunTitle: 'MacOS .NET 7.0'
    condition: succeededOrFailed()

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests (.NET 8.0)'
    inputs:
      command: 'test'
      arguments: '--no-restore --no-build --framework net8.0 /noautorsp'
      testRunTitle: 'MacOS .NET 8.0'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      PathtoPublish: '$(ArtifactsDirectoryName)'
      ArtifactName: '$(ArtifactsDirectoryName)-macOS'
    condition: always()